============================== Prover9 ===============================
Prover9 (32) version 2009-11A, November 2009.
Process 31031 was started by rafpaf on web107.webfaction.com,
Mon Nov 28 18:04:27 2011
The command was "prover9 -f 1p11.in".
============================== end of head ===========================

============================== INPUT =================================

% Reading from file 1p11.in


formulas(assumptions).
(all x (self_explanatory(x) <-> (all y (conceived_through(x,y) -> y = x)))).
(all x (substance(x) -> self_explanatory(x))).
(all x all y (conceived_through(x,y) <-> causes(y,x))).
(all x all F (involves_essentially(x,F) <-> (all e (is_essence_of(e,x) -> involves(e,F))))).
(all x all F (causes(x,x) <-> involves_essentially(x,existence))).
(all x exists y causes(y,x)).
substance(God).
(all x all F (-conceivably_has(x,F) <-> necessarily_lacks(x,F))).
(all x all F (necessarily_lacks(x,F) <-> -possibly_has(x,F))).
(all x all F (conceivably_lacks(x,F) <-> -necessarily_has(x,F))).
(all x all F (conceivably_lacks(x,existence) -> -involves_essentially(x,existence))).
end_of_list.

formulas(goals).
necessarily_has(God,existence).
end_of_list.

============================== end of input ==========================

============================== PROCESS NON-CLAUSAL FORMULAS ==========

% Formulas that are not ordinary clauses:
1 (all x (self_explanatory(x) <-> (all y (conceived_through(x,y) -> y = x)))) # label(non_clause).  [assumption].
2 (all x (substance(x) -> self_explanatory(x))) # label(non_clause).  [assumption].
3 (all x all y (conceived_through(x,y) <-> causes(y,x))) # label(non_clause).  [assumption].
4 (all x all F (involves_essentially(x,F) <-> (all e (is_essence_of(e,x) -> involves(e,F))))) # label(non_clause).  [assumption].
5 (all x all F (causes(x,x) <-> involves_essentially(x,existence))) # label(non_clause).  [assumption].
6 (all x exists y causes(y,x)) # label(non_clause).  [assumption].
7 (all x all F (-conceivably_has(x,F) <-> necessarily_lacks(x,F))) # label(non_clause).  [assumption].
8 (all x all F (necessarily_lacks(x,F) <-> -possibly_has(x,F))) # label(non_clause).  [assumption].
9 (all x all F (conceivably_lacks(x,F) <-> -necessarily_has(x,F))) # label(non_clause).  [assumption].
10 (all x all F (conceivably_lacks(x,existence) -> -involves_essentially(x,existence))) # label(non_clause).  [assumption].
11 necessarily_has(God,existence) # label(non_clause) # label(goal).  [goal].

============================== end of process non-clausal formulas ===

============================== PROCESS INITIAL CLAUSES ===============

% Clauses before input processing:

formulas(usable).
end_of_list.

formulas(sos).
-self_explanatory(x) | -conceived_through(x,y) | y = x.  [clausify(1)].
self_explanatory(x) | conceived_through(x,f1(x)).  [clausify(1)].
self_explanatory(x) | f1(x) != x.  [clausify(1)].
-substance(x) | self_explanatory(x).  [clausify(2)].
-conceived_through(x,y) | causes(y,x).  [clausify(3)].
conceived_through(x,y) | -causes(y,x).  [clausify(3)].
-involves_essentially(x,y) | -is_essence_of(z,x) | involves(z,y).  [clausify(4)].
involves_essentially(x,y) | is_essence_of(f2(x,y),x).  [clausify(4)].
involves_essentially(x,y) | -involves(f2(x,y),y).  [clausify(4)].
-causes(x,x) | involves_essentially(x,existence).  [clausify(5)].
causes(x,x) | -involves_essentially(x,existence).  [clausify(5)].
causes(f3(x),x).  [clausify(6)].
substance(God).  [assumption].
conceivably_has(x,y) | necessarily_lacks(x,y).  [clausify(7)].
-conceivably_has(x,y) | -necessarily_lacks(x,y).  [clausify(7)].
-necessarily_lacks(x,y) | -possibly_has(x,y).  [clausify(8)].
necessarily_lacks(x,y) | possibly_has(x,y).  [clausify(8)].
-conceivably_lacks(x,y) | -necessarily_has(x,y).  [clausify(9)].
conceivably_lacks(x,y) | necessarily_has(x,y).  [clausify(9)].
-conceivably_lacks(x,existence) | -involves_essentially(x,existence).  [clausify(10)].
-necessarily_has(God,existence).  [deny(11)].
end_of_list.

formulas(demodulators).
end_of_list.

============================== PREDICATE ELIMINATION =================

Eliminating self_explanatory/1
12 self_explanatory(x) | conceived_through(x,f1(x)).  [clausify(1)].
13 -self_explanatory(x) | -conceived_through(x,y) | y = x.  [clausify(1)].
Derived: conceived_through(x,f1(x)) | -conceived_through(x,y) | y = x.  [resolve(12,a,13,a)].
14 self_explanatory(x) | f1(x) != x.  [clausify(1)].
Derived: f1(x) != x | -conceived_through(x,y) | y = x.  [resolve(14,a,13,a)].
15 -substance(x) | self_explanatory(x).  [clausify(2)].
Derived: -substance(x) | -conceived_through(x,y) | y = x.  [resolve(15,b,13,a)].

Eliminating is_essence_of/2
16 involves_essentially(x,y) | is_essence_of(f2(x,y),x).  [clausify(4)].
17 -involves_essentially(x,y) | -is_essence_of(z,x) | involves(z,y).  [clausify(4)].
Derived: involves_essentially(x,y) | -involves_essentially(x,z) | involves(f2(x,y),z).  [resolve(16,b,17,b)].

Eliminating substance/1
18 -substance(x) | -conceived_through(x,y) | y = x.  [resolve(15,b,13,a)].
19 substance(God).  [assumption].
Derived: -conceived_through(God,x) | x = God.  [resolve(18,a,19,a)].

Eliminating conceivably_has/2
20 -conceivably_has(x,y) | -necessarily_lacks(x,y).  [clausify(7)].
21 conceivably_has(x,y) | necessarily_lacks(x,y).  [clausify(7)].

Eliminating necessarily_lacks/2
22 necessarily_lacks(x,y) | possibly_has(x,y).  [clausify(8)].
23 -necessarily_lacks(x,y) | -possibly_has(x,y).  [clausify(8)].

============================== end predicate elimination =============

Auto_denials:  (non-Horn, no changes).

Term ordering decisions:
Predicate symbol precedence:  predicate_order([ =, conceived_through, causes, involves_essentially, involves, conceivably_lacks, necessarily_has ]).
Function symbol precedence:  function_order([ God, existence, f2, f1, f3 ]).
After inverse_order:  (no changes).
Unfolding symbols: (none).

Auto_inference settings:
  % set(paramodulation).  % (positive equality literals)
  % set(binary_resolution).  % (non-Horn)
  % set(neg_ur_resolution).  % (non-Horn, less than 100 clauses)

Auto_process settings:
  % set(factor).  % (non-Horn)
  % set(unit_deletion).  % (non-Horn)

kept:      24 -conceived_through(x,y) | causes(y,x).  [clausify(3)].
kept:      25 conceived_through(x,y) | -causes(y,x).  [clausify(3)].
kept:      26 involves_essentially(x,y) | -involves(f2(x,y),y).  [clausify(4)].
kept:      27 -causes(x,x) | involves_essentially(x,existence).  [clausify(5)].
kept:      28 causes(x,x) | -involves_essentially(x,existence).  [clausify(5)].
kept:      29 causes(f3(x),x).  [clausify(6)].
kept:      30 -conceivably_lacks(x,y) | -necessarily_has(x,y).  [clausify(9)].
kept:      31 conceivably_lacks(x,y) | necessarily_has(x,y).  [clausify(9)].
kept:      32 -conceivably_lacks(x,existence) | -involves_essentially(x,existence).  [clausify(10)].
kept:      33 -necessarily_has(God,existence).  [deny(11)].
kept:      34 conceived_through(x,f1(x)) | -conceived_through(x,y) | y = x.  [resolve(12,a,13,a)].
kept:      35 f1(x) != x | -conceived_through(x,y) | y = x.  [resolve(14,a,13,a)].
kept:      36 involves_essentially(x,y) | -involves_essentially(x,z) | involves(f2(x,y),z).  [resolve(16,b,17,b)].
           37 -conceived_through(God,x) | x = God.  [resolve(18,a,19,a)].
kept:      38 -conceived_through(God,x) | God = x.  [copy(37),flip(b)].

============================== end of process initial clauses ========

============================== CLAUSES FOR SEARCH ====================

% Clauses after input processing:

formulas(usable).
end_of_list.

formulas(sos).
24 -conceived_through(x,y) | causes(y,x).  [clausify(3)].
25 conceived_through(x,y) | -causes(y,x).  [clausify(3)].
26 involves_essentially(x,y) | -involves(f2(x,y),y).  [clausify(4)].
27 -causes(x,x) | involves_essentially(x,existence).  [clausify(5)].
28 causes(x,x) | -involves_essentially(x,existence).  [clausify(5)].
29 causes(f3(x),x).  [clausify(6)].
30 -conceivably_lacks(x,y) | -necessarily_has(x,y).  [clausify(9)].
31 conceivably_lacks(x,y) | necessarily_has(x,y).  [clausify(9)].
32 -conceivably_lacks(x,existence) | -involves_essentially(x,existence).  [clausify(10)].
33 -necessarily_has(God,existence).  [deny(11)].
34 conceived_through(x,f1(x)) | -conceived_through(x,y) | y = x.  [resolve(12,a,13,a)].
35 f1(x) != x | -conceived_through(x,y) | y = x.  [resolve(14,a,13,a)].
36 involves_essentially(x,y) | -involves_essentially(x,z) | involves(f2(x,y),z).  [resolve(16,b,17,b)].
38 -conceived_through(God,x) | God = x.  [copy(37),flip(b)].
end_of_list.

formulas(demodulators).
end_of_list.

============================== end of clauses for search =============

============================== SEARCH ================================

% Starting search at 0.01 seconds.

given #1 (I,wt=6): 24 -conceived_through(x,y) | causes(y,x).  [clausify(3)].

given #2 (I,wt=6): 25 conceived_through(x,y) | -causes(y,x).  [clausify(3)].

given #3 (I,wt=8): 26 involves_essentially(x,y) | -involves(f2(x,y),y).  [clausify(4)].

given #4 (I,wt=6): 27 -causes(x,x) | involves_essentially(x,existence).  [clausify(5)].

given #5 (I,wt=6): 28 causes(x,x) | -involves_essentially(x,existence).  [clausify(5)].

given #6 (I,wt=4): 29 causes(f3(x),x).  [clausify(6)].

given #7 (I,wt=6): 30 -conceivably_lacks(x,y) | -necessarily_has(x,y).  [clausify(9)].

given #8 (I,wt=6): 31 conceivably_lacks(x,y) | necessarily_has(x,y).  [clausify(9)].

given #9 (I,wt=6): 32 -conceivably_lacks(x,existence) | -involves_essentially(x,existence).  [clausify(10)].

given #10 (I,wt=3): 33 -necessarily_has(God,existence).  [deny(11)].

given #11 (I,wt=10): 34 conceived_through(x,f1(x)) | -conceived_through(x,y) | y = x.  [resolve(12,a,13,a)].

given #12 (I,wt=10): 35 f1(x) != x | -conceived_through(x,y) | y = x.  [resolve(14,a,13,a)].

given #13 (I,wt=11): 36 involves_essentially(x,y) | -involves_essentially(x,z) | involves(f2(x,y),z).  [resolve(16,b,17,b)].

given #14 (I,wt=6): 38 -conceived_through(God,x) | God = x.  [copy(37),flip(b)].

given #15 (A,wt=4): 39 conceived_through(x,f3(x)).  [resolve(29,a,25,b)].

given #16 (T,wt=3): 40 conceivably_lacks(God,existence).  [resolve(33,a,31,b)].

given #17 (T,wt=4): 41 f3(God) = God.  [resolve(39,a,38,a),flip(a)].

given #18 (T,wt=3): 45 causes(God,God).  [para(41(a,1),29(a,1))].

============================== PROOF =================================

% Proof 1 at 0.01 (+ 0.00) seconds.
% Length of proof is 26.
% Level of proof is 7.
% Maximum clause weight is 6.000.
% Given clauses 18.

1 (all x (self_explanatory(x) <-> (all y (conceived_through(x,y) -> y = x)))) # label(non_clause).  [assumption].
2 (all x (substance(x) -> self_explanatory(x))) # label(non_clause).  [assumption].
3 (all x all y (conceived_through(x,y) <-> causes(y,x))) # label(non_clause).  [assumption].
5 (all x all F (causes(x,x) <-> involves_essentially(x,existence))) # label(non_clause).  [assumption].
6 (all x exists y causes(y,x)) # label(non_clause).  [assumption].
9 (all x all F (conceivably_lacks(x,F) <-> -necessarily_has(x,F))) # label(non_clause).  [assumption].
10 (all x all F (conceivably_lacks(x,existence) -> -involves_essentially(x,existence))) # label(non_clause).  [assumption].
11 necessarily_has(God,existence) # label(non_clause) # label(goal).  [goal].
13 -self_explanatory(x) | -conceived_through(x,y) | y = x.  [clausify(1)].
15 -substance(x) | self_explanatory(x).  [clausify(2)].
18 -substance(x) | -conceived_through(x,y) | y = x.  [resolve(15,b,13,a)].
19 substance(God).  [assumption].
25 conceived_through(x,y) | -causes(y,x).  [clausify(3)].
27 -causes(x,x) | involves_essentially(x,existence).  [clausify(5)].
29 causes(f3(x),x).  [clausify(6)].
31 conceivably_lacks(x,y) | necessarily_has(x,y).  [clausify(9)].
32 -conceivably_lacks(x,existence) | -involves_essentially(x,existence).  [clausify(10)].
33 -necessarily_has(God,existence).  [deny(11)].
37 -conceived_through(God,x) | x = God.  [resolve(18,a,19,a)].
38 -conceived_through(God,x) | God = x.  [copy(37),flip(b)].
39 conceived_through(x,f3(x)).  [resolve(29,a,25,b)].
40 conceivably_lacks(God,existence).  [resolve(33,a,31,b)].
41 f3(God) = God.  [resolve(39,a,38,a),flip(a)].
44 -involves_essentially(God,existence).  [resolve(40,a,32,a)].
45 causes(God,God).  [para(41(a,1),29(a,1))].
47 $F.  [resolve(45,a,27,a),unit_del(a,44)].

============================== end of proof ==========================

============================== STATISTICS ============================

Given=18. Generated=28. Kept=22. proofs=1.
Usable=18. Sos=4. Demods=1. Limbo=0, Disabled=26. Hints=0.
Kept_by_rule=0, Deleted_by_rule=0.
Forward_subsumed=5. Back_subsumed=0.
Sos_limit_deleted=0. Sos_displaced=0. Sos_removed=0.
New_demodulators=1 (0 lex), Back_demodulated=0. Back_unit_deleted=0.
Demod_attempts=31. Demod_rewrites=0.
Res_instance_prunes=0. Para_instance_prunes=0. Basic_paramod_prunes=0.
Nonunit_fsub_feature_tests=0. Nonunit_bsub_feature_tests=14.
Megabytes=0.05.
User_CPU=0.01, System_CPU=0.00, Wall_clock=0.

============================== end of statistics =====================

============================== end of search =========================

THEOREM PROVED

Exiting with 1 proof.

Process 31031 exit (max_proofs) Mon Nov 28 18:04:27 2011
