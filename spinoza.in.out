============================== Prover9 ===============================
Prover9 (32) version 2009-11A, November 2009.
Process 17034 was started by rafpaf on web107.webfaction.com,
Mon Nov 28 01:33:27 2011
The command was "prover9 -f spinoza.in".
============================== end of head ===========================

============================== INPUT =================================

% Reading from file spinoza.in


formulas(assumptions).
(all x all F necessarily_lacks(x,F)) <-> -possibly_has(x,F).
(all x all F conceivably_lacks(x,F)) <-> -necessarily_has(x,F).
existence(F) -> (conceivably_lacks(x,F) -> -involves(essence_of(x),has(x,F))).
God(x) & existence(F) & involves(essence_of(x),has(x,F)).
end_of_list.

formulas(goals).
God(x) & existence(F) & necessarily_has(x,F).
end_of_list.

============================== end of input ==========================

============================== PROCESS NON-CLAUSAL FORMULAS ==========

% Formulas that are not ordinary clauses:
1 (all x all F necessarily_lacks(x,F)) <-> -possibly_has(x,F) # label(non_clause).  [assumption].
2 (all x all F conceivably_lacks(x,F)) <-> -necessarily_has(x,F) # label(non_clause).  [assumption].
3 existence(F) -> (conceivably_lacks(x,F) -> -involves(essence_of(x),has(x,F))) # label(non_clause).  [assumption].
4 God(x) & existence(F) & involves(essence_of(x),has(x,F)) # label(non_clause).  [assumption].
5 God(x) & existence(F) & necessarily_has(x,F) # label(non_clause) # label(goal).  [goal].

============================== end of process non-clausal formulas ===

============================== PROCESS INITIAL CLAUSES ===============

% Clauses before input processing:

formulas(usable).
end_of_list.

formulas(sos).
-necessarily_lacks(f1(x),f2(x)) | -possibly_has(x,F).  [clausify(1)].
necessarily_lacks(x,y) | possibly_has(z,F).  [clausify(1)].
-conceivably_lacks(f3(x),f4(x)) | -necessarily_has(x,F).  [clausify(2)].
conceivably_lacks(x,y) | necessarily_has(z,F).  [clausify(2)].
-existence(F) | -conceivably_lacks(x,F) | -involves(essence_of(x),has(x,F)).  [clausify(3)].
God(x).  [clausify(4)].
existence(F).  [clausify(4)].
involves(essence_of(x),has(x,F)).  [clausify(4)].
-God(c1) | -existence(F) | -necessarily_has(c1,F).  [deny(5)].
end_of_list.

formulas(demodulators).
end_of_list.

============================== PREDICATE ELIMINATION =================

Eliminating necessarily_lacks/2
6 necessarily_lacks(x,y) | possibly_has(z,F).  [clausify(1)].
7 -necessarily_lacks(f1(x),f2(x)) | -possibly_has(x,F).  [clausify(1)].
Derived: possibly_has(x,F) | -possibly_has(y,F).  [resolve(6,a,7,a)].

Eliminating conceivably_lacks/2
8 conceivably_lacks(x,y) | necessarily_has(z,F).  [clausify(2)].
9 -conceivably_lacks(f3(x),f4(x)) | -necessarily_has(x,F).  [clausify(2)].
Derived: necessarily_has(x,F) | -necessarily_has(y,F).  [resolve(8,a,9,a)].
10 -existence(F) | -conceivably_lacks(x,F) | -involves(essence_of(x),has(x,F)).  [clausify(3)].
Derived: -existence(F) | -involves(essence_of(x),has(x,F)) | necessarily_has(y,F).  [resolve(10,b,8,a)].

Eliminating God/1
11 -God(c1) | -existence(F) | -necessarily_has(c1,F).  [deny(5)].
12 God(x).  [clausify(4)].
Derived: -existence(F) | -necessarily_has(c1,F).  [resolve(11,a,12,a)].

Eliminating existence/1
13 -existence(F) | -involves(essence_of(x),has(x,F)) | necessarily_has(y,F).  [resolve(10,b,8,a)].
14 existence(F).  [clausify(4)].
Derived: -involves(essence_of(x),has(x,F)) | necessarily_has(y,F).  [resolve(13,a,14,a)].
15 -existence(F) | -necessarily_has(c1,F).  [resolve(11,a,12,a)].
Derived: -necessarily_has(c1,F).  [resolve(15,a,14,a)].

Eliminating involves/2
16 -involves(essence_of(x),has(x,F)) | necessarily_has(y,F).  [resolve(13,a,14,a)].
17 involves(essence_of(x),has(x,F)).  [clausify(4)].
Derived: necessarily_has(x,F).  [resolve(16,a,17,a)].

============================== end predicate elimination =============

Auto_denials:  (no changes).

Term ordering decisions:
Predicate symbol precedence:  predicate_order([ necessarily_has, possibly_has ]).
Function symbol precedence:  function_order([ F, c1 ]).
After inverse_order:  (no changes).
Unfolding symbols: (none).

Auto_inference settings:
  % set(neg_binary_resolution).  % (HNE depth_diff=0)
  % clear(ordered_res).  % (HNE depth_diff=0)
  % set(ur_resolution).  % (HNE depth_diff=0)
    % set(ur_resolution) -> set(pos_ur_resolution).
    % set(ur_resolution) -> set(neg_ur_resolution).

Auto_process settings:  (no changes).

kept:      18 possibly_has(x,F) | -possibly_has(y,F).  [resolve(6,a,7,a)].
kept:      19 necessarily_has(x,F) | -necessarily_has(y,F).  [resolve(8,a,9,a)].
kept:      20 -necessarily_has(c1,F).  [resolve(15,a,14,a)].
kept:      21 necessarily_has(x,F).  [resolve(16,a,17,a)].

============================== PROOF =================================

% Proof 1 at 0.01 (+ 0.00) seconds.
% Length of proof is 16.
% Level of proof is 5.
% Maximum clause weight is 3.000.
% Given clauses 0.

2 (all x all F conceivably_lacks(x,F)) <-> -necessarily_has(x,F) # label(non_clause).  [assumption].
3 existence(F) -> (conceivably_lacks(x,F) -> -involves(essence_of(x),has(x,F))) # label(non_clause).  [assumption].
4 God(x) & existence(F) & involves(essence_of(x),has(x,F)) # label(non_clause).  [assumption].
5 God(x) & existence(F) & necessarily_has(x,F) # label(non_clause) # label(goal).  [goal].
8 conceivably_lacks(x,y) | necessarily_has(z,F).  [clausify(2)].
10 -existence(F) | -conceivably_lacks(x,F) | -involves(essence_of(x),has(x,F)).  [clausify(3)].
11 -God(c1) | -existence(F) | -necessarily_has(c1,F).  [deny(5)].
12 God(x).  [clausify(4)].
13 -existence(F) | -involves(essence_of(x),has(x,F)) | necessarily_has(y,F).  [resolve(10,b,8,a)].
14 existence(F).  [clausify(4)].
15 -existence(F) | -necessarily_has(c1,F).  [resolve(11,a,12,a)].
16 -involves(essence_of(x),has(x,F)) | necessarily_has(y,F).  [resolve(13,a,14,a)].
17 involves(essence_of(x),has(x,F)).  [clausify(4)].
20 -necessarily_has(c1,F).  [resolve(15,a,14,a)].
21 necessarily_has(x,F).  [resolve(16,a,17,a)].
22 $F.  [resolve(21,a,20,a)].

============================== end of proof ==========================

============================== STATISTICS ============================

Given=0. Generated=4. Kept=4. proofs=1.
Usable=0. Sos=0. Demods=0. Limbo=3, Disabled=16. Hints=0.
Kept_by_rule=0, Deleted_by_rule=0.
Forward_subsumed=0. Back_subsumed=0.
Sos_limit_deleted=0. Sos_displaced=0. Sos_removed=0.
New_demodulators=0 (0 lex), Back_demodulated=0. Back_unit_deleted=0.
Demod_attempts=0. Demod_rewrites=0.
Res_instance_prunes=0. Para_instance_prunes=0. Basic_paramod_prunes=0.
Nonunit_fsub_feature_tests=0. Nonunit_bsub_feature_tests=0.
Megabytes=0.02.
User_CPU=0.01, System_CPU=0.00, Wall_clock=0.

============================== end of statistics =====================

============================== end of search =========================

THEOREM PROVED

Exiting with 1 proof.

Process 17034 exit (max_proofs) Mon Nov 28 01:33:27 2011
