============================== Prover9 ===============================
Prover9 (32) version 2009-11A, November 2009.
Process 6819 was started by rafpaf on web107.webfaction.com,
Mon Nov 28 00:43:59 2011
The command was "prover9 -f second.in".
============================== end of head ===========================

============================== INPUT =================================

% Reading from file second.in


formulas(assumptions).
(all F all x (-possibly(-has(x,F)) -> necessarily(has(x,F)))).
-possibly(-has(God,existence)).
end_of_list.

formulas(goals).
necessarily(has(God,existence)).
end_of_list.

============================== end of input ==========================

============================== PROCESS NON-CLAUSAL FORMULAS ==========

% Formulas that are not ordinary clauses:
1 (all F all x (-possibly(-has(x,F)) -> necessarily(has(x,F)))) # label(non_clause).  [assumption].
2 necessarily(has(God,existence)) # label(non_clause) # label(goal).  [goal].

============================== end of process non-clausal formulas ===

============================== PROCESS INITIAL CLAUSES ===============

% Clauses before input processing:

formulas(usable).
end_of_list.

formulas(sos).
possibly(-has(x,y)) | necessarily(has(x,y)).  [clausify(1)].
-possibly(-has(God,existence)).  [assumption].
-necessarily(has(God,existence)).  [deny(2)].
end_of_list.

formulas(demodulators).
end_of_list.

============================== PREDICATE ELIMINATION =================

Eliminating possibly/1
3 -possibly(-has(God,existence)).  [assumption].
4 possibly(-has(x,y)) | necessarily(has(x,y)).  [clausify(1)].
Derived: necessarily(has(God,existence)).  [resolve(3,a,4,a)].

Eliminating necessarily/1
5 necessarily(has(God,existence)).  [resolve(3,a,4,a)].
6 -necessarily(has(God,existence)).  [deny(2)].
Derived: $F.  [resolve(5,a,6,a)].

============================== end predicate elimination =============

Auto_denials:  (no changes).

Term ordering decisions:
Predicate symbol precedence:  predicate_order([ ]).
Function symbol precedence:  function_order([ ]).
After inverse_order:  (no changes).
Unfolding symbols: (none).

Auto_inference settings:
  % set(neg_binary_resolution).  % (HNE depth_diff=0)
  % clear(ordered_res).  % (HNE depth_diff=0)
  % set(ur_resolution).  % (HNE depth_diff=0)
    % set(ur_resolution) -> set(pos_ur_resolution).
    % set(ur_resolution) -> set(neg_ur_resolution).

Auto_process settings:  (no changes).


============================== PROOF =================================

% Proof 1 at 0.01 (+ 0.00) seconds.
% Length of proof is 7.
% Level of proof is 3.
% Maximum clause weight is 0.000.
% Given clauses 0.

1 (all F all x (-possibly(-has(x,F)) -> necessarily(has(x,F)))) # label(non_clause).  [assumption].
2 necessarily(has(God,existence)) # label(non_clause) # label(goal).  [goal].
3 -possibly(-has(God,existence)).  [assumption].
4 possibly(-has(x,y)) | necessarily(has(x,y)).  [clausify(1)].
5 necessarily(has(God,existence)).  [resolve(3,a,4,a)].
6 -necessarily(has(God,existence)).  [deny(2)].
7 $F.  [resolve(5,a,6,a)].

============================== end of proof ==========================

============================== STATISTICS ============================

Given=0. Generated=1. Kept=0. proofs=1.
Usable=0. Sos=0. Demods=0. Limbo=0, Disabled=5. Hints=0.
Kept_by_rule=0, Deleted_by_rule=0.
Forward_subsumed=0. Back_subsumed=0.
Sos_limit_deleted=0. Sos_displaced=0. Sos_removed=0.
New_demodulators=0 (0 lex), Back_demodulated=0. Back_unit_deleted=0.
Demod_attempts=0. Demod_rewrites=0.
Res_instance_prunes=0. Para_instance_prunes=0. Basic_paramod_prunes=0.
Nonunit_fsub_feature_tests=0. Nonunit_bsub_feature_tests=0.
Megabytes=0.01.
User_CPU=0.01, System_CPU=0.00, Wall_clock=0.

============================== end of statistics =====================

============================== end of search =========================

THEOREM PROVED

Exiting with 1 proof.

Process 6819 exit (max_proofs) Mon Nov 28 00:43:59 2011
